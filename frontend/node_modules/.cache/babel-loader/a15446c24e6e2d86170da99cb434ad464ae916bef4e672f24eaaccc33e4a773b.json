{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\projects\\\\CampusCode\\\\frontend\\\\src\\\\pages\\\\StudentPage.js\",\n  _s = $RefreshSig$();\n// src/pages/StudentPage.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport ExamSession from '../components/Student/ExamSession';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentPage = () => {\n  _s();\n  const {\n    examCode\n  } = useParams(); // Extract examCode from URL parameters\n  const [exam, setExam] = useState(null);\n  useEffect(() => {\n    const fetchExam = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/student/exam/${examCode}`);\n        setExam(response.data);\n      } catch (error) {\n        console.error('Error fetching exam:', error);\n      }\n    };\n    fetchExam();\n  }, [examCode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: exam ? /*#__PURE__*/_jsxDEV(ExamSession, {\n      exam: exam\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading exam...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 45\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentPage, \"LoUQg4Cg/Wq2Lt5IO8jrnE0ReFI=\", false, function () {\n  return [useParams];\n});\n_c = StudentPage;\nexport default StudentPage;\nvar _c;\n$RefreshReg$(_c, \"StudentPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","ExamSession","jsxDEV","_jsxDEV","StudentPage","_s","examCode","exam","setExam","fetchExam","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/projects/CampusCode/frontend/src/pages/StudentPage.js"],"sourcesContent":["// src/pages/StudentPage.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport ExamSession from '../components/Student/ExamSession';\r\n\r\nconst StudentPage = () => {\r\n  const { examCode } = useParams(); // Extract examCode from URL parameters\r\n  const [exam, setExam] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchExam = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/student/exam/${examCode}`);\r\n        setExam(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching exam:', error);\r\n      }\r\n    };\r\n\r\n    fetchExam();\r\n  }, [examCode]);\r\n\r\n  return (\r\n    <div>\r\n      {exam ? <ExamSession exam={exam} /> : <p>Loading exam...</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentPage;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAS,CAAC,GAAGP,SAAS,CAAC,CAAC,CAAC,CAAC;EAClC,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,sCAAsCL,QAAQ,EAAE,CAAC;QAClFE,OAAO,CAACE,QAAQ,CAACE,IAAI,CAAC;MACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDJ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACH,QAAQ,CAAC,CAAC;EAEd,oBACEH,OAAA;IAAAY,QAAA,EACGR,IAAI,gBAAGJ,OAAA,CAACF,WAAW;MAACM,IAAI,EAAEA;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAGhB,OAAA;MAAAY,QAAA,EAAG;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEV,CAAC;AAACd,EAAA,CAtBID,WAAW;EAAA,QACML,SAAS;AAAA;AAAAqB,EAAA,GAD1BhB,WAAW;AAwBjB,eAAeA,WAAW;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}